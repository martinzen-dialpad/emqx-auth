version: '3.8'

services:
  webhook_server:
    image: python:slim-bookworm
    container_name: webhook_server
    ports:
      - 3000:3000
    environment:
      - PORT=3000
      - PYTHONUNBUFFERED=1
    volumes:
      - ./webhook.py:/opt/webhook.py:ro
    command: ["python", "-u", "/opt/webhook.py"]
    networks:
      - vernemq-net

  vernemq.master:
    image: vernemq/vernemq:latest
    container_name: vernemq.master
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
      - DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL=info
      - DOCKER_VERNEMQ_LISTENER__TCP__ALLOWED_PROTOCOL_VERSIONS=5
      - DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD=off
      - DOCKER_VERNEMQ_PLUGINS__VMQ_ACL=off
      - DOCKER_VERNEMQ_PLUGINS__VMQ_WEBHOOKS=on
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER_M5__HOOK=auth_on_register_m5
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE_M5__HOOK=auth_on_subscribe_m5
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH_M5__HOOK=auth_on_publish_m5
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__HOOK=on_client_gone
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__HOOK=on_client_offline
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER_M5__ENDPOINT=${VERNEMQ_WEBHOOK_URL}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE_M5__ENDPOINT=${VERNEMQ_WEBHOOK_URL}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH_M5__ENDPOINT=${VERNEMQ_WEBHOOK_URL}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__ENDPOINT=${VERNEMQ_WEBHOOK_URL}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__ENDPOINT=${VERNEMQ_WEBHOOK_URL}
    depends_on:
      - webhook_server
    ports:
      - 8888:8888
      - 8080:8080
      - 1883:1883
    networks:
      - vernemq-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  vernemq-net:
    driver: bridge
